name: Build, test & deploy

on:
  push:
    branches:
      - main
      - develop
  pull_request:

env:
  CI: true

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    strategy:
      matrix:
        node-version: [20.x]

    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies
        uses: bahmutov/npm-install@v1
        with:
          install-command: npm ci

      - name: Run build
        run: 'npm run build'
        env:
          CI: true

      - name: Archive build output
        uses: actions/upload-artifact@v4
        with:
          name: build
          path: dist
          retention-days: 1

  test:
    runs-on: macos-14
    timeout-minutes: 15

    needs: build

    strategy:
      matrix:
        node-version: [20.x]
        test-type: ['type', 'lint', 'style', 'e2e']

    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies
        uses: bahmutov/npm-install@v1
        with:
          install-command: npm ci --legacy-peer-deps

      - name: Install Playwright deps
        run: npx playwright install --with-deps

      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: build
          path: dist

      - name: Run ${{ matrix.test-type }}
        run: 'npm run test:${{ matrix.test-type }}'

      - name: Archive snapshot artifacts
        uses: actions/upload-artifact@v4
        continue-on-error: true
        if: ${{ success() || failure() }}
        with:
          name: playwright-results
          path: test-results
          retention-days: 5

  deploy-preview:
    runs-on: ubuntu-latest
    timeout-minutes: 15

    needs: build

    outputs:
      deployment: ${{ steps.deployment-preview.outputs.preview-url || steps.deployment-staging.outputs.preview-url || steps.deployment-prod.outputs.preview-url }}

    steps:
      - uses: actions/checkout@v4

      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: build
          path: dist

      - name: Upload to Vercel (Preview)
        id: deployment-preview
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID}}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID}}

  tests-on-preview:
    runs-on: macos-14
    timeout-minutes: 30

    needs: deploy-preview

    env:
      CI_BASEURL: ${{needs.deploy-preview.outputs.deployment}}

    strategy:
      matrix:
        node-version: [20.x]
        test-type: ['performance']
        shard: [1/5, 2/5, 3/5, 4/5, 5/5]

    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies
        uses: bahmutov/npm-install@v1
        with:
          install-command: npm ci --legacy-peer-deps

      - name: Install Playwright deps
        run: npx playwright install-deps chromium

      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: build
          path: dist

      - name: Run ${{ matrix.test-type }}
        run: 'npm run test:${{ matrix.test-type }} -- --shard=${{ matrix.shard }}'
        continue-on-error: true
        if: ${{ success() || failure() }}

      - name: Archive performance reports
        uses: actions/upload-artifact@v4
        continue-on-error: true
        if: ${{ success() || failure() }}
        with:
          name: performance_reports
          path: tests/performance/__reports__
          retention-days: 5

  test-release:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.x]

    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies
        uses: bahmutov/npm-install@v1
        with:
          install-command: npm ci

      - name: Test Semantic Release
        id: test_semantic_release
        uses: cycjimmy/semantic-release-action@v4
        with:
          semantic_version: 23.1.1
          dry_run: true

  deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 15

    needs: [build, test, tests-on-preview]

    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop'

    steps:
      - uses: actions/checkout@v4

      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: build
          path: dist

      - name: Upload to Vercel (Staging)
        id: deployment-staging
        uses: amondnet/vercel-action@v25
        if: github.ref == 'refs/heads/develop'
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID}}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID}}

      - name: Upload to Vercel (Production)
        id: deployment-prod
        uses: amondnet/vercel-action@v25
        if: github.ref == 'refs/heads/main'
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID}}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID}}
          vercel-args: '--prod'
