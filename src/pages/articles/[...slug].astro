---
import { kebabCase } from 'lodash-es';
import { getCollection } from 'astro:content';
import clsx from 'clsx';
import { parse } from 'date-fns';
import BaseLayout from '../../layouts/Base.astro';

const articleEntries = await getCollection('articles');
const entry = articleEntries.find((entry) => entry.slug === Astro.params.slug);
if (!entry) return new Response('Not found', { status: 404 });
const { Content } = await entry.render();
const date = parse(entry.data.datePublished.toString(), 'yyyyMMdd', new Date());
const dateEdited = entry.data.dateEdited && parse(entry.data.dateEdited.toString(), 'yyyyMMdd', new Date());
const viewTransitionBaseId = kebabCase(Astro.url.pathname);

const linkProps = ({ url }: { url: string | undefined }) => {
  const baseClass = 'reset link';
  if (url?.startsWith('http')) {
    return {
      href: url,
      target: '_blank',
      rel: 'noopener',
      class: clsx(baseClass, 'external'),
    };
  }

  return { href: entry.data.url, class: baseClass };
};
---

<BaseLayout {...Astro.props} content={entry.data}>
  <div class="container">
    <div>
      <article>
        <h1 class="title" style={`view-transition-name: ${viewTransitionBaseId}-title`}>{entry.data.title}</h1>
        <div class="meta" style={`view-transition-name: ${viewTransitionBaseId}-meta`}>
          <div class="date">
            Published on <time datetime={date.toJSON()}>{date.toLocaleDateString('en', { dateStyle: 'long' })}</time>
          </div>
          {
            dateEdited && (
              <div class="date-edited">
                Edited on{' '}
                <time datetime={dateEdited.toJSON()}>{dateEdited.toLocaleDateString('en', { dateStyle: 'long' })}</time>
              </div>
            )
          }
          {
            entry.data.externalUrl ? (
              <div class="original-publication">
                Originally published on{' '}
                <a {...linkProps({ url: entry.data.externalUrl || entry.data.url })}>
                  {entry.data.originalPublication}
                </a>
              </div>
            ) : (
              entry.data.originalPublication
            )
          }
        </div>
        <div
          class="description margin-block-trim"
          set:html={entry.data.description}
          style={`view-transition-name: ${viewTransitionBaseId}-description`}
        />
        <div class="content long-form" style={`view-transition-name: ${viewTransitionBaseId}-content`}>
          <Content />
        </div>
      </article>
    </div>
  </div>
</BaseLayout>

<style>
  article {
    container: article-detail/ inline-size;
    padding-block: var(--grid-gap-y);
    display: flex;
    flex-direction: column;
    gap: var(--grid-gap-y);
  }

  .title {
    font-size: var(--detail-title-size);
    font-weight: var(--detail-title-font-weight);
    line-height: var(--detail-title-line-height);
    margin: 0;
    text-shadow: var(--text-shadow-outline);
  }

  .description {
    font-size: var(--font-size-lg);
    line-height: var(--line-height-sm);
    margin: 0;
  }

  .content :global(> *:not(pre, iframe, img, figure)) {
    max-inline-size: 43.5rem;
  }

  .meta {
    font-size: var(--font-size-sm);
    color: var(--grey);
    display: flex;
    gap: 0 var(--grid-gap-x);
    flex-wrap: wrap;
  }
</style>
