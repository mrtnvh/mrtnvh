---
import { orderBy, defaultsDeep } from 'lodash-es';
import { parse, format } from 'date-fns';
import BaseLayout from '../../layouts/Base.astro';
import List from '../../components/List/List.astro';
import Folio from '../../components/Page/Folio.astro';
import EventsTable, { type Event } from '../../components/EventsTable.astro';
import events from '../../events.csv';

// const dateNow = format(new Date(), 'yyyyMMdd');
// const allTalks = await Astro.glob('./*.mdx').then((files) =>
//   files.map(({ frontmatter, ...data }) => ({
//     ...data,
//     ...frontmatter,
//   })),
// );
// const allTalksOrdered = orderBy(allTalks, ['datePublished'], ['desc']);
// const unpublishedTalks = allTalksOrdered.filter(({ datePublished }) => datePublished > dateNow);
// const publishedTalks = allTalksOrdered.filter(({ datePublished }) => datePublished <= dateNow);
const baseLayoutProps = defaultsDeep(
  {
    content: {
      title: 'Talks',
      description:
        "Sometimes, I'll get on a stage and talk about the stuff I like. Like rocking out, but with less noise. Afterwards, I'll post my slides here.",
    },
  },
  Astro.props,
);

const transformedEvents = (events as unknown as Event[]).sort((a, b) => {
  const dateA = new Date(a.startDate);
  const dateB = new Date(b.startDate);
  return dateB.getTime() - dateA.getTime();
});
---

<BaseLayout {...baseLayoutProps}>
  <Folio title="Talks" show-title={true}>
    {(<EventsTable events={transformedEvents} renderTopic={true} renderHeader={true} />)}
  </Folio>
</BaseLayout>

<style>
  .upcoming {
    background-color: var(--grey-200);
    text-align: center;
    margin-block-end: clamp(calc(var(--grid-gap-y) * 1), 9vw, calc(var(--grid-gap-y) * 2));
    padding-block: var(--grid-gap-y);

    .container {
      @media (min-width: 800px) {
        display: grid;
        grid-template-columns: 3fr 9fr;
        align-items: baseline;
      }
    }

    @media (min-width: 800px) {
      text-align: left;
    }
  }

  .upcoming-title {
    font-size: var(--font-size-lg);
    @media (min-width: 800px) {
      margin-block-end: 0;
    }
  }

  .talks {
    list-style: none;
    margin: 0;
    padding: 0;
  }

  .talk {
    display: grid;
    grid-template-columns: repeat(3, auto);
    gap: var(--grid-gap-x);
    justify-content: space-between;

    @media (min-width: 800px) {
      justify-content: start;
    }
  }

  .no-break {
    white-space: nowrap;
  }
</style>
