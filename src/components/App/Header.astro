---
import clsx from 'clsx';
import Brand from '../Brand.astro';
import Nav from './Nav.astro';

const currentPathname = new URL(Astro.request.url).pathname;
const { inverse } = Astro.props;
---

<header class={clsx({ header: true, 'header-inverse': inverse })}>
  <div class="container">
    <div class={clsx({ brand: true, 'brand-large': currentPathname === '/' })}>
      <Brand />
    </div>
    <div class="nav" data-testid="app-header-nav">
      <Nav />
    </div>
  </div>
</header>

<style>
  .header {
    /* padding-block: calc(var(--grid-gap-y) * 0.5); */
    position: relative;
    z-index: 2;

    @media (width >= 800px) {
      font-size: var(--font-size-base);
      padding-block: calc(var(--grid-gap-y) * 0.75);
    }

    @media (width <= 799px) {
      &.header-absolute {
        position: absolute;
      }
    }
  }

  .container {
    display: flex;
    align-items: center;
    gap: var(--grid-gap-x);
  }

  .brand {
    width: calc(var(--space) * 5);

    &.brand-large {
      display: flex;
      align-items: center;
      justify-content: center;

      @media (width <= 799px) {
        margin: 0 auto;
        max-width: calc(var(--space) * 12);
        width: 100%;
      }
    }

    .header-inverse & {
      @media (width <= 799px) {
        --text-color: var(--background-color);
        --headings-color: var(--background-color);
      }
    }

    @media (width >= 800px) {
      width: calc(var(--space) * 7);
      display: flex;
      align-items: center;
      justify-content: center;
    }
  }

  .nav {
    position: fixed;
    inset-block-end: 0;
    inset-inline: 0;
    background-color: var(--grey-200);
    padding: calc(var(--grid-gap-y) * 0.5) calc(var(--grid-gap-x) * 1);
    z-index: var(--bottom-navigation-zindex);

    @media (width >= 800px) {
      position: static;
      background-color: transparent;
      padding: 0;
      flex-grow: 1;
      display: flex;
      justify-content: flex-end;
    }
  }
</style>
