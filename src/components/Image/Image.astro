---
import { getImageVariants } from './cloudinary';

export interface ImageTint {
  shadows: string;
  highlights: string;
}

export interface Props {
  src: string;
  sizes?: string;
  alt: string;
  width: string;
  height: string;
  class: string;
  loading?: string;
  tint: ImageTint | string;
}

const {
  alt,
  src: source,
  width,
  height,
  tint,
  loading = false,
  sizes = `(min-width: 1280px) 1280px, 100vw`,
} = Astro.props as Props;
const { src, srcSet } = getImageVariants({ src: source, tint });
const { srcSet: srcSetWebp } = getImageVariants({ src: source, type: 'webp', tint });
const { srcSet: srcSetAvif } = getImageVariants({ src: source, type: 'avif', tint });
// const { srcSet: srcSetDark } = getImageVariants({ src: source, tint, dark: true });
// const { srcSet: srcSetDarkWebp } = getImageVariants({
//   src: source,
//   type: 'webp',
//   tint,
//   dark: true,
// });
---

<picture>
  <!-- <source sizes={sizes} srcset={srcSetDark} media="(prefers-color-scheme: dark)" />
  <source sizes={sizes} srcset={srcSetDarkWebp} type="image/webp" media="(prefers-color-scheme: dark)" /> -->
  <source {sizes} srcset={srcSetAvif} type="image/avif" />
  <source {sizes} srcset={srcSetWebp} type="image/webp" />
  <source {sizes} srcset={srcSet} />
  <img class="image" {src} {alt} {loading} {width} {height} style={`aspect-ratio: ${width} / ${height}`} />
</picture>

<style>
  picture {
    display: flex;
    background-color: var(--grey-200);
  }

  img {
    width: 100%;
    height: auto;
    object-fit: cover;
  }
</style>
